plugins {
    id 'java'
    id 'edu.sc.seis.launch4j' version '2.5.3'
    id 'kr.motd.sphinx' version '2.10.0'
}

version '2.0.0'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'checkstyle'
mainClassName = 'edu.rpi.legup.Legup'

sourceCompatibility = 1.8

dependencies {
    implementation 'org.jetbrains:annotations:20.1.0'
    implementation 'org.jetbrains:annotations:20.1.0'
    compile project(':legup-update')
    compile 'com.google.firebase:firebase-admin:6.3.0'
    compile 'org.apache.httpcomponents:httpclient:4.5.1'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'

//    compile 'com.google.code.gson:gson:2.8.2'
//    compile 'commons-cli:commons-cli:1.4'
//    compile 'commons-io:commons-io:2.6'
    compile 'org.apache.commons:commons-lang3:3.12.0'
    compile 'org.apache.logging.log4j:log4j-api:2.17.2'
    compile 'org.apache.logging.log4j:log4j-core:2.17.2'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'junit:junit:4.+'
}

task customFatJar(type: Jar) {
    manifest {
        attributes('Implementation-Title': 'Legup',
                'Implementation-Version': version,
                'Main-Class': 'edu.rpi.legup.Legup',
                'SplashScreen-Image': 'edu/rpi/legup/images/Legup/LegupSplash.png')
    }
    archiveName = 'Legup.jar'
    baseName = 'Legup.jar'
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
}

jar {
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
        configurations.runtime.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes('Implementation-Title': 'Legup',
                'Implementation-Version': version,
                'Main-Class': 'edu.rpi.legup.Legup',
                'SplashScreen-Image': 'edu/rpi/legup/images/Legup/LegupSplash.png')
    }
    archiveName = 'Legup.jar'
}

/*
 * CREATES NATIVE WINDOWS EXECUTABLE
 * Launches launch4j to create an executable (.exe) file wrapping the jar
 * THIS IS NOT THE INSTALLER
 * Add "icon = 'path/to/icon.ico'" to set an icon for the executable
 */
createExe() {
    mainClassName = 'edu.rpi.legup.Legup'
    outputDir = '../native/windows'
    outfile = 'bin/Legup.exe'
    bundledJrePath = 'jre'
    bundledJre64Bit = true
    jdkPreference = 'preferJre'
    jreMinVersion = '1.8.0'
    jreRuntimeBits = '64/32'
}

/*
 * CREATES NATIVE WINDOWS INSTALLER -- ONLY RUNS ON WINDOWS
 * Runs the shipped version of Inno Setup (6.2) to compile the installer
 * Modify the setup settings in native/windows/legup_inno_setup.iss
 *
 * Modifications are likely required to run the setup script on your computer:
 * Edit the "CHANGE ME" line in native/windows/legup_inno_setup.iss to reflect
 * the path to the Java installation you want to ship inside the executable.
 */
task buildNativeWindows(type: Exec, dependsOn: 'createExe') {
    jar
    createExe

    workingDir = "${buildDir}/../native/windows"
    commandLine 'cmd', '/c', 'make_windows_installer.bat'
}


repositories {
    mavenCentral()
}
